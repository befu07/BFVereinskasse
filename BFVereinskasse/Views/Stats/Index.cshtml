@model StatsIndexVM


<div class="row">
    <div class="col-3 align-self-center">
        <h1>
            Statistiken
        </h1>
    </div>
    @*     <div class="col-3 align-self-center">
    <a href="/Payment/CreatePayment" class="btn btn-sm btn-outline-success ">+ Neue Zahlung</a>
    </div> *@
    <div class="col-3 align-self-center">
        <span class="text-success">@TempData["SuccessMessage"]</span>
        <span class="text-danger">@TempData["ErrorMessage"]</span>
    </div>
</div>

<div class="row">
    <div class="col-3 align-self-center">
        <h2>
            Übersicht
        </h2>
    </div>
</div>
<table class="table">
    <thead>
    <th>
        Summe Ein
    </th>
    <th>
        Summe Aus
    </th>
    <th>
        Kontostand
    </th>
    </thead>
    <tr>
        <td>
            @Model.SumIn
        </td>
        <td>
            @Model.SumOut
        </td>
        <td>
            @Model.SumTotal
        </td>
    </tr>
</table>



<div class="row">
    <div class="col-3 align-self-center">
        <h2>
            Höchsten Zahlungen
        </h2>
    </div>
</div>

<canvas id="Highest5" style="width:100%;max-width:700px"></canvas>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>

@section Scripts {
    <script>
        function GetJSON_Simple() {
            var resp = [];
            $.ajax({
                type: "GET",
                url: '/Stats/Highest',
                async: false,
                contentType: "application/json",
                success: function (data) {
                    resp.push(data);
                },
                error: function (req, status, error) {
                    // do something with error
                    alert("error");
                }
            });
            return resp;
        }
        var simpleData = GetJSON_Simple();
        const ctx = document.getElementById('Highest5');
        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: simpleData[0].objekte.map(foo=>foo.name),
                datasets:
                    [{
                        label: 'Zahlungen',
                        data: simpleData[0].objekte.map(foo => foo.amount),
                        borderWidth: 1,
                        backgroundColor: simpleData[0].objekte.map(foo => foo.color),
                    }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });
    </script>

}
<canvas id="myChart" style="width:100%;max-width:700px"></canvas>


@* <script>
    const ctx = document.getElementById('myChart');
    new Chart(ctx, {
        type: 'bar',
        data: @Html.Raw(Model.PaymentsJson),
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
</script> *@
@*

                // var Names = [];
                // var Amounts = [];
                // @foreach (var item in Model.HighestPayments)
            // {
            //     @:Names.push(@item.Mitglied.Nachname);
            //     @:Amounts.push(@item.Betrag);
            // }
<script>
    const ctx = document.getElementById('myChart');
    new Chart(ctx, {
        type: 'bar',
        data: {
            labels: @Html.Raw(Model.Names),
            datasets: [{
                label: 'Zahlungen',
                data: @Html.Raw(Model.Amounts),
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
</script> *@